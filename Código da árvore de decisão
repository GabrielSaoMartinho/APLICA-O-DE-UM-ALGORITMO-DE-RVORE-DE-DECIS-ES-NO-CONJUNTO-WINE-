from sklearn.datasets import load_wine
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import accuracy_score, confusion_matrix
import matplotlib.pyplot as plt
import seaborn as sns

wine = load_wine()
X = wine.data
y = wine.target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y)

modelo = DecisionTreeClassifier(
    max_depth=1,
    max_features=None,
    criterion='entropy',
    min_samples_leaf=1,
    min_samples_split=2)
modelo.fit(X_train, y_train)

plt.figure(figsize=(12, 8))
plot_tree(modelo, feature_names=wine.feature_names, class_names=wine.target_names, filled=True, rounded=True)
plt.show()

y_pred_train = modelo.predict(X_train)
accuracy_train = accuracy_score(y_train, y_pred_train)

y_pred_test = modelo.predict(X_test)
accuracy_test = accuracy_score(y_test, y_pred_test)

print(f"Precisão com os dados de treinamento:{accuracy_train*100: .2f}%")
print(f"Precisão com os dados de teste:{accuracy_test*100: .2f}%")

conf_matrix = confusion_matrix(y_test, y_pred_test)

plt.figure(figsize=(8, 6))
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=wine.target_names, yticklabels=wine.target_names)
plt.title('Matriz de Confusão')
plt.xlabel('Previsto')
plt.ylabel('Real')
plt.show()
